name: Terraform Deploy

on:
  workflow_dispatch:  # This enables manual triggering of the workflow

permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: aws
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials from AWS account
      uses: aws-actions/configure-aws-credentials@v1
      with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
        
    # - name: Install AWS CLI
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y awscli

    # - name: Configure AWS CLI
    #   run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && aws configure set default.region $AWS_REGION

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Initialize Terraform
      run: terraform init
      # env:
      #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Download Wiz CLI
      run: curl -o wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64 && chmod +x wizcli

    - name: Authenticate to Wiz
      run: ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
      env:
        WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
        WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

    - name: Run wiz-cli directory scan
      run: ./wizcli dir scan --path .

    - name: Run wiz-cli IAC scan
      run: ./wizcli iac scan --path . --policy "Revvity Infrastructure As Code Policy"

    - name: Plan Terraform changes
      run: terraform plan -out=tfplan

    # Add a prompt to ask the user whether to apply or destroy changes
    - name: Apply Terraform changes
      run: terraform apply --auto-approve

    - name: Clean up
      run: rm tfplan
